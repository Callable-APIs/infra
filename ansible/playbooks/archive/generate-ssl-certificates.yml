---
- name: Generate SSL Certificates as Artifacts
  hosts: localhost
  connection: local
  vars:
    artifacts_dir: "{{ playbook_dir }}/../ansible/artifacts"
    cert_domain: "callableapis.com"
    cert_subdomains:
      - "onode1.callableapis.com"
      - "onode2.callableapis.com"
      - "gnode1.callableapis.com"
      - "inode1.callableapis.com"

  tasks:
    - name: Create artifacts directory
      ansible.builtin.file:
        path: "{{ artifacts_dir }}"
        state: directory
        mode: "0755"

    - name: Install certbot locally
      ansible.builtin.package:
        name: certbot
        state: present

    - name: Generate SSL certificate for all subdomains
      ansible.builtin.command: >
        certbot certonly --manual --preferred-challenges dns
        --email admin@callableapis.com --agree-tos --no-eff-email
        --cert-name callableapis
        -d {{ cert_subdomains | join(' -d ') }}
        --config-dir {{ artifacts_dir }}/letsencrypt
        --work-dir {{ artifacts_dir }}/letsencrypt/work
        --logs-dir {{ artifacts_dir }}/letsencrypt/logs
      register: certbot_result
      ignore_errors: yes

    - name: Create certificate package
      ansible.builtin.archive:
        path: "{{ artifacts_dir }}/letsencrypt/live/callableapis"
        dest: "{{ artifacts_dir }}/ssl-certificates.tar.gz"
        format: gz
        mode: "0644"

    - name: Display certificate generation results
      ansible.builtin.debug:
        msg: |
          SSL Certificate Generation:
          - Domain: {{ cert_domain }}
          - Subdomains: {{ cert_subdomains | join(', ') }}
          - Certificate package: {{ artifacts_dir }}/ssl-certificates.tar.gz
          - Status: {{ 'SUCCESS' if certbot_result.rc == 0 else 'FAILED - Manual DNS verification required' }}
