- name: Pull services container image
  ansible.builtin.shell: docker pull rl337/callableapis:services
  failed_when: false

- name: Stop existing services container
  ansible.builtin.shell: |
    docker stop callableapis-services 2>/dev/null || true
    docker rm callableapis-services 2>/dev/null || true
  failed_when: false

- name: Deploy services container with vault mount
  ansible.builtin.shell: |
    docker run -d \
      --name callableapis-services \
      --restart unless-stopped \
      -p {{ hostvars[inventory_hostname]['services_port'] | default('8080') }}:8080 \
      -v /home/ansible/.ansible/vault:/app/vault:ro \
      rl337/callableapis:services
  register: container_deploy
  failed_when: false

- name: Wait for container to be ready
  ansible.builtin.wait_for:
    port: "{{ hostvars[inventory_hostname]['services_port'] | default('8080') }}"
    host: "127.0.0.1"
    timeout: 30
  when: container_deploy.rc == 0

- name: Verify services container is running
  ansible.builtin.shell: docker ps --filter name=callableapis-services
  register: container_status

- name: Display services container status
  ansible.builtin.debug:
    msg: |
      Services Container Deployment:
      - Container: callableapis-services
      - Image: rl337/callableapis:services
      - Port: {{ hostvars[inventory_hostname]['services_port'] | default('8080') }}
      - Path: {{ hostvars[inventory_hostname]['services_path'] | default('/api/v1') }}
      - Vault Mount: /home/ansible/.ansible/vault:/app/vault:ro
      - Status: {{ 'RUNNING' if container_deploy.rc == 0 else 'FAILED' }}
      - Container Output: {{ container_status.stdout }}
