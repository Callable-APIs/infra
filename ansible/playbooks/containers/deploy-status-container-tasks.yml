---
- name: Ensure hosts.json exists on control machine
  ansible.builtin.stat:
    path: "{{ playbook_dir | dirname | dirname | dirname }}/reports/hosts.json"
  register: hosts_json_stat
  delegate_to: localhost
  connection: local
  become: false

- name: Copy hosts.json to status container host
  ansible.builtin.copy:
    src: "{{ playbook_dir | dirname | dirname | dirname }}/reports/hosts.json"
    dest: "/tmp/hosts.json"
    mode: '0644'
  when: hosts_json_stat.stat.exists
  become: yes

- name: Pull status container image
  ansible.builtin.shell: docker pull rl337/callableapis:status
  failed_when: false

- name: Stop existing status container
  ansible.builtin.shell: |
    docker stop callableapis-status 2>/dev/null || true
    docker rm callableapis-status 2>/dev/null || true
  failed_when: false

- name: Set volume mount option
  ansible.builtin.set_fact:
    volume_mount: "-v /tmp/hosts.json:/app/hosts.json:ro "
  when: hosts_json_stat.stat.exists

- name: Set empty volume mount option
  ansible.builtin.set_fact:
    volume_mount: ""
  when: not hosts_json_stat.stat.exists

- name: Deploy status container
  ansible.builtin.shell: |
    docker run -d \
      --name callableapis-status \
      --restart unless-stopped \
      -p {{ hostvars[inventory_hostname]['status_port'] | default('8081') }}:8080 \
      {{ volume_mount | default('') }}\
      rl337/callableapis:status
  register: container_deploy
  failed_when: false
  become: yes

- name: Wait for container to be ready
  ansible.builtin.wait_for:
    port: "{{ hostvars[inventory_hostname]['status_port'] | default('8081') }}"
    host: "127.0.0.1"
    timeout: 30
  when: container_deploy.rc == 0

- name: Verify status container is running
  ansible.builtin.shell: docker ps --filter name=callableapis-status
  register: container_status
  become: yes

- name: Display status container status
  ansible.builtin.debug:
    msg: |
      Status Container Deployment:
      - Container: callableapis-status
      - Image: rl337/callableapis:status
      - Port: {{ hostvars[inventory_hostname]['status_port'] | default('8081') }}
      - Hosts JSON Mounted: {{ hosts_json_stat.stat.exists }}
      - Status: {{ 'RUNNING' if container_deploy.rc == 0 else 'FAILED' }}
      - Details: {{ container_status.stdout }}
