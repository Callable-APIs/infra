---
- name: Install and configure containerd on all nodes
  hosts: all
  become: yes
  vars:
    containerd_version: "1.7.13"
    runc_version: "1.1.12"
    cni_version: "1.4.0"

  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - curl
          - wget
          - gnupg
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Update package cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Install runc
      apt:
        name: runc
        state: present

    - name: Install CNI plugins
      unarchive:
        src: "https://github.com/containernetworking/plugins/releases/download/v{{ cni_version }}/cni-plugins-linux-amd64-v{{ cni_version }}.tgz"
        dest: /opt/cni/bin
        remote_src: yes
        mode: "0755"
        owner: root
        group: root

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory
        mode: "0755"

    - name: Generate containerd config
      command: containerd config default
      register: containerd_config
      changed_when: false

    - name: Write containerd configuration
      copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        mode: "0644"
      notify: restart containerd

    - name: Enable and start containerd service
      systemd:
        name: containerd
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Install nerdctl (containerd CLI)
      get_url:
        url: "https://github.com/containerd/nerdctl/releases/download/v1.7.1/nerdctl-1.7.1-linux-amd64.tar.gz"
        dest: /tmp/nerdctl.tar.gz
        mode: "0644"

    - name: Extract nerdctl
      unarchive:
        src: /tmp/nerdctl.tar.gz
        dest: /usr/local/bin
        remote_src: yes
        mode: "0755"
        owner: root
        group: root

    - name: Create containerd systemd override directory
      file:
        path: /etc/systemd/system/containerd.service.d
        state: directory
        mode: "0755"

    - name: Configure containerd systemd override
      copy:
        content: |
          [Service]
          ExecStart=
          ExecStart=/usr/bin/containerd
          Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        dest: /etc/systemd/system/containerd.service.d/override.conf
        mode: "0644"
      notify: restart containerd

    - name: Create containerd data directory
      file:
        path: /var/lib/containerd
        state: directory
        mode: "0755"
        owner: containerd
        group: containerd

    - name: Create containerd log directory
      file:
        path: /var/log/containerd
        state: directory
        mode: "0755"
        owner: containerd
        group: containerd

    - name: Add ansible user to containerd group
      user:
        name: ansible
        groups: containerd
        append: yes

    - name: Clean up temporary files
      file:
        path: /tmp/nerdctl.tar.gz
        state: absent

  handlers:
    - name: restart containerd
      systemd:
        name: containerd
        state: restarted
        daemon_reload: yes
