---
- name: Configure Dynamic Nginx Routing Based on Host Variables
  hosts: webapp_hosts
  become: yes
  vars:
    nginx_config_path: "/etc/nginx/sites-available/callableapis"
    nginx_config_enabled: "/etc/nginx/sites-enabled/callableapis"
    ssl_cert_dir: "/etc/nginx/ssl"

  tasks:
    - name: Install nginx if not present
      ansible.builtin.package:
        name: nginx
        state: present

    - name: Start and enable nginx
      ansible.builtin.systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Create nginx sites-available directory
      ansible.builtin.file:
        path: /etc/nginx/sites-available
        state: directory
        mode: "0755"

    - name: Create nginx sites-enabled directory
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled
        state: directory
        mode: "0755"

    - name: Remove default nginx site
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Determine container configuration
      ansible.builtin.set_fact:
        container_configs: |
          {%- set configs = [] -%}
          {%- if 'base_container_hosts' in group_names -%}
            {%- set _ = configs.append({
              'name': 'base',
              'port': base_port | default(8080),
              'path': base_path | default('/'),
              'upstream': 'base_backend'
            }) -%}
          {%- endif -%}
          {%- if 'services_container_hosts' in group_names -%}
            {%- set _ = configs.append({
              'name': 'services',
              'port': services_port | default(8080),
              'path': services_path | default('/api/v1/'),
              'upstream': 'services_backend'
            }) -%}
          {%- endif -%}
          {%- if 'status_container_hosts' in group_names -%}
            {%- set _ = configs.append({
              'name': 'status',
              'port': status_port | default(8081),
              'path': status_path | default('/api/status'),
              'upstream': 'status_backend'
            }) -%}
          {%- endif -%}
          {{ configs }}

    - name: Create dynamic nginx configuration
      ansible.builtin.template:
        src: ../templates/dynamic-nginx.conf.j2
        dest: "{{ nginx_config_path }}"
        mode: "0644"
        backup: yes
      register: nginx_config_result

    - name: Enable nginx site
      ansible.builtin.file:
        src: "{{ nginx_config_path }}"
        dest: "{{ nginx_config_enabled }}"
        state: link
        force: yes

    - name: Test nginx configuration
      ansible.builtin.command: nginx -t
      register: nginx_test_result
      changed_when: false

    - name: Restart nginx if configuration changed
      ansible.builtin.systemd:
        name: nginx
        state: restarted
      when: nginx_config_result.changed

    - name: Display nginx configuration summary
      ansible.builtin.debug:
        msg: |
          Nginx Configuration Summary for {{ inventory_hostname }}:
          - Hostname: {{ inventory_hostname }}.callableapis.com
          - Container Configurations: {{ container_configs | length }}
          {%- for config in container_configs %}
          - {{ config.name }}: Port {{ config.port }}, Path {{ config.path }}
          {%- endfor %}
          - SSL Certificate: {{ ssl_cert_dir }}/fullchain.pem
          - Configuration: {{ nginx_config_path }}
          - Status: {{ 'RESTARTED' if nginx_config_result.changed else 'NO CHANGES' }}
