---
- name: Deploy CallableAPIs Base Container to all nodes
  hosts: all
  become: yes

  pre_tasks:
    - name: Check if containerd is installed
      stat:
        path: /usr/bin/containerd
      register: containerd_installed

    - name: Check if containerd is running
      systemd:
        name: containerd
      register: containerd_running
      failed_when: false

    - name: Fail if containerd is not installed or running
      fail:
        msg: |
          Containerd is not properly installed or running on {{ inventory_hostname }}!

          Please run the containerd setup playbook first:
          ansible-playbook -i inventory/production playbooks/containerd-setup.yml
      when: not containerd_installed.stat.exists or containerd_running.failed

  vars:
    container_image: "rl337/callableapis:base"
    container_name: "callableapis-base"
    container_port: 8080

  tasks:
    - name: Pull base container image
      command: nerdctl pull {{ container_image }}
      register: pull_result
      failed_when: false

    - name: Display pull result
      debug:
        msg: "{{ 'Container image pulled successfully' if pull_result.rc == 0 else 'Failed to pull container image' }}"

    - name: Stop existing base container if running
      command: nerdctl stop {{ container_name }}
      register: stop_result
      failed_when: false

    - name: Remove existing base container if exists
      command: nerdctl rm {{ container_name }}
      register: remove_result
      failed_when: false

    - name: Run base container
      command: >
        nerdctl run -d
        --name {{ container_name }}
        --restart unless-stopped
        -p {{ container_port }}:8080
        {{ container_image }}
      register: run_result

    - name: Wait for container to start
      wait_for:
        port: "{{ container_port }}"
        host: "127.0.0.1"
        timeout: 30

    - name: Check container status
      command: nerdctl ps --filter name={{ container_name }}
      register: container_status

    - name: Display container status
      debug:
        msg: "{{ container_status.stdout_lines }}"

    - name: Test container health endpoint
      uri:
        url: "http://127.0.0.1:{{ container_port }}/health"
        method: GET
        status_code: 200
      register: health_test
      failed_when: false

    - name: Test container status endpoint
      uri:
        url: "http://127.0.0.1:{{ container_port }}/api/status"
        method: GET
        status_code: 200
      register: status_test
      failed_when: false

    - name: Display test results
      debug:
        msg: |
          Container deployment completed on {{ inventory_hostname }}
          Health endpoint: {{ 'PASSED' if health_test.status == 200 else 'FAILED' }}
          Status endpoint: {{ 'PASSED' if status_test.status == 200 else 'FAILED' }}
          Container port: {{ container_port }}
          Access URL: http://{{ ansible_default_ipv4.address }}:{{ container_port }}

  post_tasks:
    - name: Verify container is running
      command: nerdctl ps --filter name={{ container_name }} --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
      register: final_status

    - name: Display final container status
      debug:
        msg: "{{ final_status.stdout_lines }}"

