name: Deploy AWS Cost Report to GitHub Pages

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      days_back:
        description: 'Number of days to look back for cost data'
        required: false
        default: '30'
        type: string

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Configure AWS credentials
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
        echo "[default]" > ~/.aws/config
        echo "region = us-east-1" >> ~/.aws/config

    - name: Generate AWS Cost Report
      run: |
        # Use input parameter or default to 30 days
        DAYS_BACK="${{ github.event.inputs.days_back || '30' }}"
        echo "Generating report for last $DAYS_BACK days..."
        
        # Generate the public report
        poetry run aws-infra-report --days $DAYS_BACK --output reports
        
        # Verify report was generated
        if [ ! -f "reports/index.html" ]; then
          echo "Error: Report not generated successfully"
          exit 1
        fi
        
        echo "Report generated successfully"
        ls -la reports/

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./reports
        cname: ${{ github.event.repository.name }}.github.io  # Optional: set custom domain
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: 'Deploy AWS Cost Report - $(date -u)'

    - name: Create summary
      if: always()
      run: |
        echo "## AWS Cost Report Deployment" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f "reports/index.html" ]; then
          echo "✅ **Report generated successfully**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Report Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- Period: Last ${{ github.event.inputs.days_back || '30' }} days" >> $GITHUB_STEP_SUMMARY
          echo "- Report URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Report generation failed**" >> $GITHUB_STEP_SUMMARY
          echo "Check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
        fi
