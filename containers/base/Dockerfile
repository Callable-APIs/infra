# Multi-stage build for CallableAPIs Base Container
FROM alpine:3.19 as builder

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    gcc \
    musl-dev \
    python3-dev

# Create app directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip3 install --no-cache-dir --break-system-packages -r requirements.txt

# Production stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    tzdata \
    ca-certificates

# Create non-root user
RUN adduser -D -s /bin/sh appuser

# Create app directory
WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder /usr/lib/python3.11/site-packages /usr/lib/python3.11/site-packages
COPY --from=builder /usr/bin /usr/bin

# Copy application code
COPY app.py .
COPY src/ ./src/
COPY requirements.txt .
COPY generate-version.sh .

# Copy container version file (generated by GitHub Actions or local development)
COPY CONTAINER_VERSION /etc/CONTAINER_VERSION

# Set permissions
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import requests; requests.get('http://localhost:8080/health', timeout=5)"

# Run the application
CMD ["python3", "app.py"]
